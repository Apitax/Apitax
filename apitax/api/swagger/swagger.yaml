---
swagger: "2.0"
info:
  description: "The API for the frontend of Apitax"
  version: "2"
  title: "Apitax"
  contact:
    email: "shawn.clake@nopatience.net"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/apitax/2"
tags:
- name: "apitax"
  description: "Operations on apitax"
- name: "scriptax"
  description: "Operations on scriptax"
- name: "commandtax"
  description: "Operations on commandtax"
- name: "api"
  description: "Operations on api"
- name: "drivers"
  description: "Operations on drivers"
schemes:
- "https"
paths:
  /apitax/auth:
    post:
      tags:
      - "apitax"
      summary: "Authenticate"
      description: "Authenticate with the API"
      operationId: "authenticate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "The user authentication object."
        required: false
        schema:
          $ref: "#/definitions/UserAuth"
      responses:
        200:
          description: "Auth Response"
          schema:
            $ref: "#/definitions/AuthResponse"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
  /apitax/auth/refresh:
    post:
      tags:
      - "apitax"
      summary: "Refreshes login token using refresh token"
      description: "Refreshes login token using refresh token"
      operationId: "refresh_token"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Authentication successful"
          schema:
            $ref: "#/definitions/UserAuth"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
  /apitax/status:
    get:
      tags:
      - "apitax"
      summary: "Retrieve the system status"
      description: "Retrieve the system status"
      operationId: "system_status"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
  /apitax/config:
    get:
      tags:
      - "apitax"
      summary: "Retrieve the config"
      description: "Retrieve the config"
      operationId: "get_config"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
  /apitax/logs/{log}:
    get:
      tags:
      - "apitax"
      summary: "Retrieve the logs"
      description: "Retrieve the logs"
      operationId: "get_log"
      produces:
      - "application/json"
      parameters:
      - name: "log"
        in: "path"
        description: "Get this log"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
  /drivers/{name}/apitax/users:
    get:
      tags:
      - "apitax"
      summary: "Retrieve a list of users"
      description: "Retrieve a list of users"
      operationId: "get_user_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
  /drivers/{name}/apitax/users/{user}:
    get:
      tags:
      - "apitax"
      summary: "Retrieve a user"
      description: "Retrieve a user"
      operationId: "get_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user"
        in: "path"
        description: "Get user with this name"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
    post:
      tags:
      - "apitax"
      summary: "Create a new script"
      description: "Create a new script"
      operationId: "create_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "create"
        description: "The data needed to create this user"
        required: false
        schema:
          $ref: "#/definitions/create"
      - name: "user"
        in: "path"
        description: "Get user with this name"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
    put:
      tags:
      - "apitax"
      summary: "Save a script"
      description: "Save a script"
      operationId: "save_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "save"
        description: "The data needed to save this user"
        required: false
        schema:
          $ref: "#/definitions/save"
      - name: "user"
        in: "path"
        description: "Get user with this name"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
    delete:
      tags:
      - "apitax"
      summary: "Delete a script"
      description: "Delete a script"
      operationId: "delete_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "delete"
        description: "The data needed to delete this user"
        required: false
        schema:
          $ref: "#/definitions/delete"
      - name: "user"
        in: "path"
        description: "Get user with this name"
        required: true
        type: "string"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.apitax_controller"
  /drivers/{name}/commandtax/command:
    post:
      tags:
      - "commandtax"
      summary: "Execute a Command"
      description: "Execute a command"
      operationId: "command"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "execute"
        description: "The data needed to execute this command"
        required: false
        schema:
          $ref: "#/definitions/execute"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.commandtax_controller"
  /drivers/{name}/api/status:
    get:
      tags:
      - "api"
      summary: "Retrieve the status of an api"
      description: "Retrieve the status of an api"
      operationId: "get_driver_api_status"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.api_controller"
  /drivers/{name}/api/catalog:
    get:
      tags:
      - "api"
      summary: "Retrieve the api catalog"
      description: "Retrieve the api catalog"
      operationId: "get_driver_api_catalog"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.api_controller"
  /drivers:
    get:
      tags:
      - "drivers"
      summary: "Retrieve the catalog of drivers"
      description: "Retrieve the catalog of drivers"
      operationId: "get_driver_list"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.drivers_controller"
  /drivers/{name}/status:
    get:
      tags:
      - "drivers"
      summary: "Retrieve the status of a loaded driver"
      description: "Retrieve the status of a loaded driver"
      operationId: "get_driver_status"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.drivers_controller"
  /drivers/{name}/config:
    get:
      tags:
      - "drivers"
      summary: "Retrieve the config of a loaded driver"
      description: "Retrieve the config of a loaded driver"
      operationId: "get_driver_config"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.drivers_controller"
  /drivers/{name}/blacklist:
    get:
      tags:
      - "drivers"
      summary: "Retrieve the blacklist in the driver"
      description: "Retrieve the blacklist in the driver"
      operationId: "get_driver_blacklist"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.drivers_controller"
  /drivers/{name}/whitelist:
    get:
      tags:
      - "drivers"
      summary: "Retrieve the whitelist in the driver"
      description: "Retrieve the whitelist in the driver"
      operationId: "get_driver_whitelist"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.drivers_controller"
  /drivers/{name}/scriptax/catalog:
    get:
      tags:
      - "scriptax"
      summary: "Retrieve the script catalog"
      description: "Retrieve the script catalog"
      operationId: "get_driver_script_catalog"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.scriptax_controller"
  /drivers/{name}/scriptax/scripts:
    get:
      tags:
      - "scriptax"
      summary: "Retrieve the contents of a script"
      description: "Retrieve the contents of a script"
      operationId: "get_driver_script"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "The script name."
        required: false
        type: "string"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.scriptax_controller"
    post:
      tags:
      - "scriptax"
      summary: "Create a new script"
      description: "Create a new script"
      operationId: "create_driver_script"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "create"
        description: "The data needed to create this script"
        required: false
        schema:
          $ref: "#/definitions/create_1"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.scriptax_controller"
    put:
      tags:
      - "scriptax"
      summary: "Save a script"
      description: "Save a script"
      operationId: "save_driver_script"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "save"
        description: "The data needed to save this script"
        required: false
        schema:
          $ref: "#/definitions/save_1"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.scriptax_controller"
    delete:
      tags:
      - "scriptax"
      summary: "Delete a script"
      description: "Delete a script"
      operationId: "delete_driver_script"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "delete"
        description: "The data needed to delete this script"
        required: false
        schema:
          $ref: "#/definitions/delete_1"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.scriptax_controller"
    patch:
      tags:
      - "scriptax"
      summary: "Rename a script"
      description: "Rename a script"
      operationId: "rename_driver_script"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "rename"
        description: "The data needed to save this script"
        required: false
        schema:
          $ref: "#/definitions/rename"
      - name: "name"
        in: "path"
        description: "Get status of a driver with this name"
        required: true
        type: "string"
      responses:
        200:
          description: "Response Returned Ok"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: "The specified resource was not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: "Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - Bearer: []
      x-swagger-router-controller: "apitax.api.controllers.scriptax_controller"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  UserAuth:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      api_token:
        type: "string"
      extra:
        type: "object"
        properties: {}
    example:
      password: "password"
      api_token: "api_token"
      extra: "{}"
      username: "username"
  User:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      role:
        type: "string"
  Command:
    type: "object"
    required:
    - "command"
    - "options"
    properties:
      parameters:
        type: "object"
        properties: {}
      options:
        type: "object"
        properties: {}
      command:
        type: "string"
  Script:
    type: "object"
    properties:
      content:
        type: "string"
      name:
        type: "string"
  Response:
    type: "object"
    required:
    - "body"
    - "status"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      body:
        type: "object"
        properties: {}
      log:
        type: "string"
    example:
      log: "log"
      message: "message"
      body: "{}"
      status: 0
  ErrorResponse:
    type: "object"
    required:
    - "message"
    - "status"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      state:
        type: "string"
  AuthResponse:
    type: "object"
    required:
    - "message"
    - "status"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      access_token:
        type: "string"
      refresh_token:
        type: "string"
      auth:
        $ref: "#/definitions/UserAuth"
    example:
      access_token: "access_token"
      refresh_token: "refresh_token"
      auth:
        password: "password"
        api_token: "api_token"
        extra: "{}"
        username: "username"
      message: "message"
      status: 0
  save:
    type: "object"
    required:
    - "script"
    properties:
      script:
        $ref: "#/definitions/User"
  create:
    type: "object"
    required:
    - "script"
    properties:
      script:
        $ref: "#/definitions/User"
  delete:
    type: "object"
    required:
    - "script"
    properties:
      script:
        $ref: "#/definitions/User"
  execute:
    type: "object"
    required:
    - "command"
    properties:
      command:
        $ref: "#/definitions/Command"
      auth:
        $ref: "#/definitions/UserAuth"
  save_1:
    type: "object"
    required:
    - "script"
    properties:
      script:
        $ref: "#/definitions/Script"
  create_1:
    type: "object"
    required:
    - "script"
    properties:
      script:
        $ref: "#/definitions/Script"
  delete_1:
    type: "object"
    required:
    - "script"
    properties:
      script:
        $ref: "#/definitions/Script"
  rename:
    type: "object"
    required:
    - "new"
    - "original"
    properties:
      original:
        $ref: "#/definitions/Script"
      new:
        $ref: "#/definitions/Script"
responses:
  NotFound:
    description: "The specified resource was not found"
    schema:
      $ref: "#/definitions/ErrorResponse"
  Unauthorized:
    description: "Unauthorized"
    schema:
      $ref: "#/definitions/ErrorResponse"
  ServerError:
    description: "Server Error"
    schema:
      $ref: "#/definitions/ErrorResponse"
  Auth:
    description: "Auth Response"
    schema:
      $ref: "#/definitions/AuthResponse"
  Ok:
    description: "Response Returned Ok"
    schema:
      $ref: "#/definitions/Response"
